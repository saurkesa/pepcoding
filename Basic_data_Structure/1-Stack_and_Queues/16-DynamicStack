package Stack_and_queue;

import java.util.Scanner;
/*
 --- input
  5
push 10
display
push 20
display
push 30
display
push 40
display
push 50
display
push 60
display
top
pop
display
top
pop
display
top
pop
display
top
pop
display
top
pop
display
top
pop
quit
// output
10 
20 10 
30 20 10 
40 30 20 10 
50 40 30 20 10 
60 50 40 30 20 10 
60
60
50 40 30 20 10 
50
50
40 30 20 10 
40
40
30 20 10 
30
30
20 10 
20
20
10 
10
10

 */


public class DynamicStack {

	public static class CustomStack {

		int[] data;
		int tos;

		public CustomStack(int n) {
			data = new int[n];
			tos = -1;

		}

		int size() {

			return tos + 1;

		}

		void display() {

			for (int i = tos; i >= 0; i--) {
				System.out.print(data[i] + " ");
			}
			System.out.println();
		}

		void push(int val) {

			if (tos == data.length - 1) {

				int[] ndata = new int[2 * data.length];

				for (int i = 0; i < data.length; i++) {
					ndata[i] = data[i];
				}
				data = ndata;
				tos++;
				data[tos] = val;
			} else {
				tos++;
				data[tos] = val;
			}

		}

		int top() {

			if (tos == -1) {
				System.out.println("stack underflow");
				return -1;
			} else {
				int val = data[tos];
				return val;

			}
		}

		int pop() {
			if (tos == -1) {
				System.out.println("stack underflow");
				return -1;
			} else {
				int val = data[tos];
				tos--;
				return val;
			}
		}

	}

	public static void main(String[] args) {

		Scanner s1 = new Scanner(System.in);
		int n = s1.nextInt();

		CustomStack st = new CustomStack(n);

		String str = s1.nextLine();

		while (str.equals("quit") == false) {
			if (str.startsWith("push")) {
				int val = Integer.parseInt(str.split(" ")[1]);
				st.push(val);
			} else if (str.startsWith("pop")) {
				int val = st.pop();
				if (val != -1) {
					System.out.println(val);
				}
			} else if (str.startsWith("top")) {
				int val = st.top();
				if (val != -1) {
					System.out.println(val);
				}
			} else if (str.startsWith("size")) {
				System.out.println(st.size());
			} else if (str.startsWith("display")) {
				st.display();
			}
			str = s1.nextLine();
		}

	}

}
