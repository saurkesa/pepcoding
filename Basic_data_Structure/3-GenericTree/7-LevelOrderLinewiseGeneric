package GenericTree;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.ArrayDeque;
import java.util.ArrayList;
import java.util.Queue;
import java.util.Stack;

/*
 * 1. You are given a partially written GenericTree class.
2. You are required to complete the body of levelorderLineWise function.
 The function is expected to visit every node in "levelorder fashion" and print
  them from left to right (level by level). All nodes on same level should be
   separated by a space. Different levels should be on separate lines. 
   Please check the question video for more details.
3. Input is managed for you.

===============input

24
10 20 50 -1 60 -1 -1 30 70 -1 80 110 -1 120 -1 -1 90 -1 -1 40 100 -1 -1 -1

===============output
10 
20 30 40 
50 60 70 80 90 100 
110 120 

 */
public class LevelOrderLinewiseGeneric {

	private static class Node {
		int data;
		ArrayList<Node> children = new ArrayList<>();
	}

	public static void display(Node node) {
		String str = node.data + " -> ";
		for (Node child : node.children) {
			str += child.data + ", ";
		}
		str += ".";
		System.out.println(str);

		for (Node child : node.children) {
			display(child);
		}
	}

	public static Node construct(int[] arr) {
		Node root = null;

		Stack<Node> st = new Stack<>();
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] == -1) {
				st.pop();
			} else {
				Node t = new Node();
				t.data = arr[i];

				if (st.size() > 0) {
					st.peek().children.add(t);
				} else {
					root = t;
				}

				st.push(t);
			}
		}

		return root;
	}

	public static void levelOrderLinewise(Node node) {
		Queue<Node> mq = new ArrayDeque<>();
		mq.add(node);
		Queue<Node> cq = new ArrayDeque<>();
		while (mq.size() > 0) {
			node=mq.remove();
			System.out.print(node.data + " ");
			for (Node child : node.children) {
				cq.add(child);
			}
			if (mq.size() == 0) {
				mq = cq;
				cq = new ArrayDeque<>();
				System.out.println();

			}
		}
	}

	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int n = Integer.parseInt(br.readLine());
		int[] arr = new int[n];
		String[] values = br.readLine().split(" ");
		for (int i = 0; i < n; i++) {
			arr[i] = Integer.parseInt(values[i]);
		}

		Node root = construct(arr);
		levelOrderLinewise(root);

		// display(root);
	}

}
