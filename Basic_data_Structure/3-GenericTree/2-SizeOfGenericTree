package GenericTree;

import java.util.ArrayList;
import java.util.Scanner;
import java.util.Stack;
/*
 * 
 * 1. You are given a partially written GenericTree class.
2. You are required to complete the body of size function. The function is expected to count the number of nodes in the tree and return it.
3. Input and Output is managed for you.

 * input
 * 
 *  no of element 12
10
20
-1
30
50
-1
60
-1
-1
40
-1
-1
================output
6

 */
public class SizeOfGenericTree {
	private static class Node {
		int data;
		ArrayList<Node> children = new ArrayList<>();
	}

	public static void display(Node node) {
		String str = node.data + " -> ";
		for (Node child : node.children) {
			str += child.data + ", ";
		}
		str += ".";
		System.out.println(str);

		for (Node child : node.children) {
			display(child);
		}
	}

	public static Node construct(int[] arr) {
		Node root = null;

		Stack<Node> st = new Stack<>();
		for (int i = 0; i < arr.length; i++) {
			if (arr[i] == -1) {
				st.pop();
			} else {
				Node t = new Node();
				t.data = arr[i];

				if (st.size() > 0) {
					st.peek().children.add(t);
				} else {
					root = t;
				}

				st.push(t);
			}
		}

		return root;
	}

	public static int size(Node node) {
		int s = 0;
		for (Node child : node.children) {
			int cs = size(child);
			s = s + cs;
		}
		s = s + 1;

		return s;
	}

	public static void main(String[] args) throws Exception {
		Scanner s1 = new Scanner(System.in);
		int n = s1.nextInt();
		int[] arr = new int[n];

		for (int i = 0; i < n; i++) {
			arr[i] = s1.nextInt();
		}

		Node root = construct(arr);
		int sz = size(root);
		System.out.println(sz);
		// display(root);
	}
}
