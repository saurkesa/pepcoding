package LinkedList;

import java.util.Scanner;

/*
 * 
 * 1. You are given a partially written LinkedList class.
2. You are required to complete the body of displayReverse and displayReverseHelper functions. The function are expected to print in reverse the linked list without actually reversing it. 
3. Input and Output is managed for you. 


 * =========input
 * 6
1
2
3
4
5
6
10
20

===============output
1 2 3 4 5 6 
6 5 4 3 2 1 
20 1 2 3 4 5 6 10 
 */

public class DisplayReverseLinkedList {

	public static class Node {
		int data;
		Node next;
	}

	public static class LinkedList {
		Node head;
		Node tail;
		int size;

		void addLast(int val) {
			Node temp = new Node();
			temp.data = val;
			temp.next = null;

			if (size == 0) {
				head = tail = temp;
			} else {
				tail.next = temp;
				tail = temp;
			}

			size++;
		}

		public int size() {
			return size;
		}

		public void display() {
			Node temp = head;

			while (temp != null) {
				System.out.print(temp.data + " ");
				temp = temp.next;
			}

			System.out.println();

		}

		public void addFirst(int val) {

			Node temp = new Node();
			temp.data = val;
			temp.next = head;
			head = temp;
			if (size == 0) {
				tail = temp;
			}
			size++;

		}

		private void displayReverseHelper(Node node) {
			if (node == null) {
				return;
			}
			displayReverseHelper(node.next);
			System.out.print(node.data + " ");
		}

		public void displayReverse() {
			displayReverseHelper(head);
			System.out.println();
		}
	}

	public static void main(String[] args) throws Exception {

		Scanner s1 = new Scanner(System.in);
		int n1 = s1.nextInt();
		int[] val1 = new int[n1];
		LinkedList l1 = new LinkedList();
		for (int i = 0; i < n1; i++) {

			l1.addLast(s1.nextInt());
		}
		int a = s1.nextInt();
		int b = s1.nextInt();

		l1.display();
		l1.displayReverse();
		l1.addLast(a);
		l1.addFirst(b);
		l1.display();

	}

}
