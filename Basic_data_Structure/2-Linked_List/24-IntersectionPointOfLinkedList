package LinkedList;

import java.util.Scanner;

/*
 * 1. You are given a partially written LinkedList class.
2. You are required to complete the body of findIntersection function. The function is passed two linked lists which start separately but merge at a node and become common thereafter. The function is expected to find the point where two linked lists merge. You are not allowed to use arrays to solve the problem.
3. Input and Output is managed for you. 

-----------input

l1---5
1
2
3
4
5
l2---3
10
4
5
output
4
 */

public class IntersectionPointOfLinkedList {

	public static class Node {
		int data;
		Node next;
	}

	public static class LinkedList {
		Node head;
		Node tail;
		int size;
		Node fleft;

		void addLast(int val) {
			Node temp = new Node();
			temp.data = val;
			temp.next = null;

			if (size == 0) {
				head = tail = temp;
			} else {
				tail.next = temp;
				tail = temp;
			}

			size++;
		}

		public int size() {
			return size;
		}

		public void display() {
			Node temp = head;

			while (temp != null) {
				System.out.print(temp.data + " ");
				temp = temp.next;
			}

			System.out.println();

		}

		public void addFirst(int val) {

			Node temp = new Node();
			temp.data = val;
			temp.next = head;
			head = temp;
			if (size == 0) {
				tail = temp;
			}
			size++;

		}

	    public static int findIntersection(LinkedList one, LinkedList two) {
	        Node on = one.head;
	        Node tn = two.head;

	        if (one.size > two.size) {
	          for (int i = 0; i < one.size - two.size; i++) {
	            on = on.next;
	          }
	        } else {
	          for (int i = 0; i < two.size - one.size; i++) {
	            tn = tn.next;
	          }
	        }

	        while (on.data != tn.data) {
	          on = on.next;
	          tn = tn.next;
	        }

	        return on.data;
	      }

	}

	public static void main(String[] args) throws Exception {

		Scanner s1 = new Scanner(System.in);
		int n1 = s1.nextInt();
		int[] val1 = new int[n1];
		LinkedList l1 = new LinkedList();
		for (int i = 0; i < n1; i++) {

			l1.addLast(s1.nextInt());
		}

		int n2 = s1.nextInt();
		int[] val2 = new int[n1];
		LinkedList l2 = new LinkedList();
		for (int i = 0; i < n2; i++) {

			l2.addLast(s1.nextInt());
		}
		int inter = LinkedList.findIntersection(l1, l2);
		System.out.println(inter);

	}

}
