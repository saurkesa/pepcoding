/*1. You are given two numbers n and k. You are required to rotate n, k times to the right. If k is positive, rotate to the right i.e. remove rightmost digit and make
it leftmost. Do the reverse for negative value of k. Also k can have an absolute value larger than number of digits in n.
2. Take as input n and k.
3. Print the rotated number.
4. Note - Assume that the number of rotations will not cause leading 0's in the result. e.g. such an input will not be given
   n = 12340056
   k = 3
   r = 05612340*/
   
   // example 1234 rotation 2   
   
   
   import java.util.Scanner;

public class RotateNumber {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		Scanner s1 = new Scanner(System.in);
		int n = s1.nextInt();
		int k = s1.nextInt();
		int temp = n;
		int nod = 0;
		while (temp != 0) {
			temp = temp / 10;
			nod++;
		}
                handle if k is more length of dogit of number
		k = k % nod; 
		// handle negative rotation make it positive rotation
		if (k < 0) {
			k = k + nod;
		}

		int div = 1;
		int mul = 1;
		for (int i = 1; i <= nod; i++) {
			if (i <= k) {
				div = div * 10;
			} else {
				mul = mul * 10;
			}
		}

		int quo = n / div;
		int rem = n % div;
		int r = mul * rem + quo;
		System.out.println(r);
	}

}
