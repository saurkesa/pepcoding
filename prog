1--------Find the missing elements in array start from 1 to the max element present.

public class Test {

	public static void main(String[] args) {

		int[] arr = { 1, 2, 4, 6, 7 };

		int max = Integer.MIN_VALUE;

		for (int i = 0; i < arr.length; i++) {
			if (arr[i] > max) {
				max = arr[i];
			}
		}
		
		boolean[] present = new boolean[max+1];
		
		for(int i=0;i<arr.length;i++) {
			if(arr[i]<=max) {
				present[arr[i]]=true;
			}
		}

		for(int i=1;i<=max;i++) {
			if(!present[i]) {
				System.out.println(i);
			}
		}
	}
}

2---------------Out of two list find the numbers which are not common in both the list

public class Test {

	public static void main(String[] args) {

		   List<Integer> list1 = new ArrayList<>();
	        list1.add(1);
	        list1.add(2);
	        list1.add(3);
	        list1.add(4);

	        List<Integer> list2 = new ArrayList<>();
	        list2.add(3);
	        list2.add(4);
	        list2.add(5);
	        list2.add(6);
	        
	        List<Integer> result = new ArrayList<>();
	        
	        for(int num :list1) {
	        	if(!list2.contains(num)) {
	        		result.add(num);
	        	}
	        }
	        
	        for(int num :list2) {
	        	if(!list1.contains(num)) {
	        		result.add(num);
	        	}
	        }
	        
	        System.out.println(result);

	}
}

3-----------------https://www.geeksforgeeks.org/problems/two-numbers-with-sum-closest-to-zero1737/1

public class Test {

	public static void main(String[] args) {
		int[] arr = { -1, 2, 1, -4, 3 };

		Arrays.sort(arr);

		int num1 = 0;
		int num2 = 0;
		int left = 0;
		int right = arr.length - 1;
		int closestSum = Integer.MAX_VALUE;

		while (left < right) {
			int sum = arr[left] + arr[right];

			if (Math.abs(sum) < Math.abs(closestSum)) {

				closestSum = sum;
				num1 = arr[left];
				num2 = arr[right];

			}
			if (sum < 0) {
				left++;
			} else {
				right--;
			}
		}
		System.out.println("The two numbers with sum closest to zero are: " + num1 + " and " + num2);

	}
}
