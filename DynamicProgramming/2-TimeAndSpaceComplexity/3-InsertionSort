package TimeAndSpaceComplexity;

import java.util.Scanner;
/*
 no of element 5
 input
-1
0
-4
2
1
// output 
-4
-1
0
1
2

 */
public class InsertionSort {
	private static void insertionSort(int[] arr) {

		for (int i = 1; i < arr.length; i++) {
			for (int j = i - 1; j >= 0; j--) {
				if (isGreater(arr, j, j + 1)) {
					swap(arr, j, j + 1);
				} else {
					break;
				}
			}
		}

	}

	// used for swapping ith and jth elements of array
	public static void swap(int[] arr, int i, int j) {
		int temp = arr[i];
		arr[i] = arr[j];
		arr[j] = temp;
	}

	public static boolean isGreater(int[] arr, int j, int i) {
		if (arr[i] < arr[j]) {
			return true;
		} else {
			return false;
		}
	}

	private static void print(int[] arr) {
		for (int i = 0; i < arr.length; i++) {
			System.out.println(arr[i]);
		}

	}

	public static void main(String[] args) {

		Scanner s1 = new Scanner(System.in);
		int n = s1.nextInt();
		int[] arr = new int[n];
		for (int i = 0; i < arr.length; i++) {
			arr[i] = s1.nextInt();
		}

		insertionSort(arr);
		print(arr);

	}

}
