package DynamicProgrammingAndGreedy;

import java.util.Scanner;
/*
 * 
 * 1. You are given a number n, representing the count of elements.
2. You are given n numbers.
3. You are given a number "tar".
4. You are required to calculate and print true or false, if there is a subset the elements of which add 
     up to "tar" or not.
     
     
 * no of element 5
4
2
7
1
3
target 10
output true
 */
public class TargetSumSubsetDp {

	public static void main(String[] args) {

		Scanner s1 = new Scanner(System.in);
		int n = s1.nextInt();
		int[] arr = new int[n];
		for (int i = 0; i < arr.length; i++) {
			arr[i] = s1.nextInt();
		}
		int tar = s1.nextInt();
		boolean[][] dp = new boolean[n + 1][tar + 1];

		for (int i = 0; i < dp.length; i++) {
			for (int j = 0; j < dp[0].length; j++) {
				if (i == 0 && j == 0) {
					dp[i][j] = true;
				} else if (i == 0) {
					dp[i][j] = false;
				} else if (j == 0) {
					dp[i][j] = true;
				} else {
					if (dp[i - 1][j] == true) {
						dp[i][j] = true;
					} else {
						int val = arr[i - 1];
						if (j >= val) {
							if (dp[i - 1][j - val] == true) {
								dp[i][j] = true;
							}
						}
					}
				}
			}
		}

		System.out.println(dp[arr.length][tar]);

	}

}
